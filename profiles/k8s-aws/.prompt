function ctx_prompt() {
    local aws=$(agp)
    local kube=$(kubectx_prompt_info)
    if [[ ${aws} == ${kube} ]]; then
        echo "[%{$kubectx_color[$aws]%}$aws%{$reset_color%}]"
    else
        echo "AWS:%{$fg[red]%}${aws}%{$reset_color%} kubectx:%{$fg[red]%}${kube}%{$reset_color%}"
    fi
}

function ctx() {
    if [[ -z "$1" ]]; then
        echo "AWS: $(agp)"
        echo "kubectx: $(kubectx_prompt_info)"
        if [[ $(agp) != $(kubectx_prompt_info) ]]; then
            echo "$fg[red]Mismatch!"
        fi
    else
        local cluster_identifier=""
        for key value in ${(kv)kubectx_mapping}; do
            if [[ $value == $1 ]]; then
                cluster_identifier=$key
            fi
        done
        if [[ -z $cluster_identifier ]]; then
            echo "Cluster '$1' not found"
        else
            echo "Using cluster $1: $cluster_identifier"
            kubectx $cluster_identifier > /dev/null
            asp $1
        fi
    fi
}

jq --version &> /dev/null
if [[ $? -ne 0  ]]; then
    echo "Be sure to install 'jq'"
fi

function aws_sso_login_time() {
    local sso_cache_file=""
    if [[ ! -d ${HOME}/.aws/sso/cache ]]; then
        echo "‚ùå SSO not configured"
        return
    fi
    for full_filename in ${HOME}/.aws/sso/cache/*; do
        filename=$(basename $full_filename)
        if [[ $filename =~ "^[0-9a-z]*\.json$" ]]; then
            sso_cache_file=$full_filename
        fi
    done
    if [[ -z $sso_cache_file ]]; then
        echo "‚ùå Not logged in"
        return
    fi
    content=$(cat $sso_cache_file)
    exp=$(echo $content | jq -r '.expiresAt')
    exp_unixtime=$(echo exp | date --date="$exp" +%s)
    now=$(date +%s)
    diff=$(($exp_unixtime - $now))
    if [[ $diff -lt 0 ]]; then
        echo "‚ùå Outdated"
        return
    fi
    hours=$(($diff / 60 / 60))
    minutes=$((($diff / 60) % 60))
    seconds=$(($diff % 60))
    if [[ $hours -ge 1 || $minutes -ge 15 ]]; then
        echo "‚úîÔ∏è"
        return
    fi
    echo "üü° ${(l:2::0:)minutes}m:${(l:2::0:)seconds}s left"
}

RPS1='$(ctx_prompt) $(aws_sso_login_time)'
